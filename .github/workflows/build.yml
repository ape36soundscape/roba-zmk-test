name: Build ZMK Firmware (Auto Shields)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      BOARD: seeeduino_xiao_ble                 # ← XIAO nRF52840（必要なら変更）
      ZMK_CONFIG: ${{ github.workspace }}/config
      BOARD_ROOT: ${{ github.workspace }}/config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build gperf ccache dfu-util \
            device-tree-compiler wget python3-pip python3-setuptools \
            python3-wheel xz-utils file make gcc g++ git
          pip install west pyyaml

      - name: Initialize west (fetch ZMK)
        run: |
          set -eux
          if [ ! -d zmk ]; then
            git clone --depth=1 https://github.com/zmkfirmware/zmk.git zmk
          fi
          west init -l zmk
          west update
          west zephyr-export

      - name: Preflight - list shields and ids
        run: |
          set -eux
          echo "== zmk.yml files =="
          find config/boards/shields -maxdepth 2 -name zmk.yml -print || true
          echo "== parsed ids =="
          python - <<'PY'
import glob, yaml, json, os
ids = []
for y in glob.glob("config/boards/shields/*/zmk.yml"):
    try:
        with open(y, encoding="utf-8") as f:
            d = yaml.safe_load(f) or {}
        sid = d.get("id")
        if sid: 
            print(f"FOUND id: {sid}  <- {y}")
            ids.append(sid)
        else:
            print(f"SKIP: no id in {y}")
    except Exception as e:
        print(f"ERROR parsing {y}: {e}")
if not ids:
    print("NO SHIELDS FOUND. Please add config/boards/shields/<name>/zmk.yml with 'id: <name>'.")
    raise SystemExit(2)
open(os.environ["GITHUB_OUTPUT"], "a").write("SHIELDS="+",".join(ids))
PY

      - name: Build all shields (sequential)
        id: build_all
        run: |
          set -eux
          # Collect shield ids again (same logic as preflight)
          shields=$(python - <<'PY'
import glob, yaml
ids=[]
for y in glob.glob("config/boards/shields/*/zmk.yml"):
    try:
        with open(y, encoding="utf-8") as f:
            d = yaml.safe_load(f) or {}
        sid = d.get("id")
        if sid: ids.append(sid)
    except Exception:
        pass
print(" ".join(ids))
PY
)
          if [ -z "$shields" ]; then
            echo "No shield ids collected. Abort."
            exit 2
          fi
          for sid in $shields; do
            echo "::group::Building $sid"
            west build -p always -b "$BOARD" -d "build/$sid" zmk/app \
              -- -DSHIELD="$sid" -DZMK_CONFIG="$ZMK_CONFIG" -DBOARD_ROOT="$BOARD_ROOT"
            echo "::endgroup::"
          done

      - name: Upload UF2 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2-all
          path: |
            build/*/zephyr/*.uf2
